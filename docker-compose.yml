version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: codeguard-backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - codeguard_tmp:/app/tmp   # shared volume
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=codeguard
      - DB_HOST=db
      - DB_PORT=5432
      - SESSION_SECRET=supersecret
    depends_on:
      - db
    command: ["node", "src/server.js"]
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: codeguard-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: codeguard
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  python-runtime:
    build:
      context: ./backend
      dockerfile: Dockerfile.python
    container_name: codeguard-python
    volumes:
      - codeguard_tmp:/code
    command: tail -f /dev/null   # keep alive

  c-runtime:
    build:
      context: ./backend
      dockerfile: Dockerfile.c
    container_name: codeguard-c
    volumes:
      - codeguard_tmp:/code
    command: tail -f /dev/null   # keep alive

volumes:
  pgdata:
  codeguard_tmp: